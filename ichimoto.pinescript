//
//@version=5
strategy(title="Ichimoku Cloud", shorttitle="Ichimoku", overlay=true, initial_capital=1000, default_qty_type = strategy.percent_of_equity, default_qty_value = 100)
conversionPeriods = input.int(9, minval = 1, title = "Conversion Line length")
basePeriods = input.int(defval = 26, minval =1, title = "Base Line Length" )
laggingSpan2Periods = input.int(basePeriods*2, minval = 1, title = "Leading Span B Length")
displacement = input.int(26, minval=1, title = "Lagging Span")
donchian(len) => math.avg(ta.lowest(len), ta.highest(len))
conversionLine = donchian(conversionPeriods)
baseLine = donchian(basePeriods)
leadLine1 = math.avg(conversionLine, baseLine)
leadLine2 = donchian(laggingSpan2Periods)

    if (cross(conversionLine, baseLine) and leadLine1 > leadLine)
    strategy.entry("Long", strategy.long);;;
          

 
    if (cross(baseLine, conversionLine) and leadLine1 < leadLine2)
    strategy.entry("Long", strategy.long)


    if ((baseLine, conversionLine) and leadLine1 > leadLine2)
    strategy.entry("Short", strategy.short)


    else ((conversionLine, baseLine) and leadLine1 < leadLine2)
    strategy.close("Short"))

plot(conversionLine, color= #2962ff, title = "Conversion Line")
plot(baseLine, color=#871c1c,title = "Base Line" )
plot(close,offset = -displacement + 1, color = #A5D6A7, title = "Lagging Span")
p1 = plot(leadLine1, offset = displacement -1, color=#A5D6A7, title = "Leading Span A")
p2= plot(leadLine2, offset = displacement -1, color=#EF9A9A, title = "Leading Span B")
plot(leadLine1 > leadLine2 ? leadLine1 : leadLine2, offset = displacement -1, title = "Kumo Cloud Upper Line", display = display.none )
plot(leadLine1 < leadLine2 ? leadLine1 : leadLine2, offset = displacement -1, title = "Kumo Cloud Lower Line", display = display.none )
fill(p1,p2,color = leadLine1 > leadLine2 ? color.rgb(67,160,71,90): color.rgb(244, 67, 54,96))